	private static BufferedImage ConvertMat2Image(Mat kameraVerisi) {

		MatOfByte byteMatVerisi = new MatOfByte();
		// Ara belleðe verilen formatta görüntü kodlar
		Imgcodecs.imencode(".jpg", kameraVerisi, byteMatVerisi);
		// Mat nesnesinin toArray() metodu elemanlarý byte dizisine çevirir
		byte[] byteArray = byteMatVerisi.toArray();
		BufferedImage goruntu = null;
		try {
			InputStream in = new ByteArrayInputStream(byteArray);
			goruntu = ImageIO.read(in);
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
		return goruntu;
	}
  
          // Bir frame (çerçeve) oluşturur
	public static void PencereHazirla() {
		frame = new JFrame();
		frame.setLayout(new FlowLayout());
		frame.setSize(700, 600);
		frame.setVisible(true);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}

	// Resmi gösterecek label oluşturur
	public static void PushImage(Image img2) {
		// Pencere oluşturulmamış ise hazırlanır
		if (frame == null)
			PencereHazirla();
		// Daha önceden bir görüntü yüklenmiş ise yenisi için kaldırır
		if (lbl != null)
			frame.remove(lbl);
		icon = new ImageIcon(img2);
		lbl = new JLabel();
		lbl.setIcon(icon);
		frame.add(lbl);
		// Frame nesnesini yeniler
		frame.revalidate();
	}
